// #### Task 3 üíª
// - –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ—Ä–µ–π–º–≤–æ—Ä –¥–ª—è UI —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è web –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è https://www.onliner.by/:
// 	- —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ –±—Ä–∞—Ç—å –Ω–∞ —Å–≤–æ–µ —É—Å–º–æ—Ç—Ä–µ–Ω–∏–µ: WDIO + cucumber, cypress –∏–ª–∏ playwright
// 	- –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–∑—É—á–µ–Ω–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã: Page Object, Page Factory
// 	- –î–æ–±–∞–≤–∏—Ç—å allure —Ä–µ–ø–æ—Ä—Ç–µ—Ä
// 	- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ –ª–æ–∫–∞—Ç–æ—Ä—ã –∏ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã
// 	- –û—Ä–≥–∞–Ω–∏–∑–æ–≤—ã–≤–∞—Ç—å —Ç–µ—Å—Ç—ã –≤ –≥—Ä—É–ø–ø—ã


import { test, expect } from "@playwright/test";
import { MainPage } from "../pages/mainpage";
import { PagesFactory } from "../pages/pagefactory";
import { NewsPage1 } from "../pages/newspage";
import { ContactPage } from "../pages/contactpage";
import { logger } from "../utils/log.conf";

test.describe("Check news website", async () => {

test(" Test 1 - Check sections title", async ({ page }) => {
    logger.debug("First log message")
    const mainPage1 = PagesFactory.getPage(page, "main") as MainPage
    await mainPage1.openWebsite(page); 
    expect(await page.title()).toBe("Onl√≠ner")
    await mainPage1.Catalogclick()
    expect(await page.title()).toBe("–ö–∞—Ç–∞–ª–æ–≥ Onl√≠ner")
    await mainPage1.openWebsite(page);
    await mainPage1.NewsButtonclick()
    expect(await page.title()).toBe("Onl√≠ner")
    await mainPage1.openWebsite(page)
    await mainPage1.Autolistclick()
    expect(await page.title()).toBe("–ê–≤—Ç–æ–±–∞—Ä–∞—Ö–æ–ª–∫–∞")

})
test(" Test 2 - Check news page sections", async ({ page }) => {
    const NewsPage = PagesFactory.getPage(page, "news") as NewsPage1
    await NewsPage.openWebsite(page);
    await NewsPage.NewsButtonclick()
    await page.waitForTimeout(1000);
    expect(await page.title()).toBe("Onl√≠ner")
    expect(await NewsPage.Wallet).toBeTruthy
    expect(await NewsPage.Auto).toBeTruthy
    expect(await NewsPage.Tech).toBeTruthy
    expect(await NewsPage.Estate).toBeTruthy
})
test(" Test 3 - Check contacts Phone", async ({ page }) => {
    const mainPage3 = PagesFactory.getPage(page, "contact") as ContactPage
    await mainPage3.openWebsite(page);
    await mainPage3.openContactPageClick();
    expect(await page.textContent).toBeTruthy
    expect(await mainPage3.Connect).toBeDefined
})
// test(" Test 4 - Check Goolge Map", async ({ page }) => {
//     const mainPage3 = PagesFactory.getPage(page, "contact") as ContactPage
//     await mainPage3.openWebsite3(page);
//     await mainPage3.Mappageclick()
//     expect(await page.title()).toContain("–ö–æ–Ω—Ç–∞–∫—Ç—ã")
// })

test(" Test 5 - Home and flat page", async ({ page }) => {
    const mainPage3 = PagesFactory.getPage(page, "main") as MainPage
    await mainPage3.openWebsite(page);
    await mainPage3.HomeAndFlatclick()
    await mainPage3.BuyFlatclick()
    await page.waitForTimeout(1000);
    expect(await page.title()).toBe('–ö—É–ø–∏—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—É –≤ –ú–∏–Ω—Å–∫–µ')
})

})